<?xml version="1.0"?>

<!--====================Capture Jimmy Dynamics for Gazebo=================== -->
<robot>

<!--===================================LINKS & JOINTS=======================================-->

  <!--Gazebo does not recognize the colors defined in "materials.xacro". Therefor
  Gazebo material tag must be specified for each link that we want to be a 
  specified color-->
  <gazebo reference="base_link">
      <material>Gazebo/Grey</material>
  </gazebo>

<!--  -->
  <gazebo reference="left_drive_wheel_link">
      <material>Gazebo/Black</material>
   	  <kp>1000000.0</kp>
  	  <kd>10.0</kd>
      <mu1>1.5</mu1>
      <mu2>1.5</mu2>
      <fdir1>1 0 0</fdir1>
      <maxVel>1.0</maxVel>
      <minDepth>0.00</minDepth>
  </gazebo>

  <!--  -->
  <gazebo reference="right_drive_wheel_link">
      <material>Gazebo/Black</material>
      <kp>1000000.0</kp>
      <kd>10.0</kd>
      <mu1>1.5</mu1>
      <mu2>1.5</mu2>
      <fdir1>1 0 0</fdir1>
      <maxVel>1.0</maxVel>
      <minDepth>0.00</minDepth>
  </gazebo>


  <!--  -->
  <gazebo reference="left_castor_wheel_link">
      <material>Gazebo/Black</material>
      <!--tags are from: http://gazebosim.org/tutorials/?tut=ros_urdf-->
      <!--These values fixed the robot from bouncing side to side:
          Problem: http://answers.gazebosim.org/question/24459/model-contact-with-ground-issue/
          solution: see: http://answers.gazebosim.org/question/3334/slip1-slip2-in-urdf/-->
      <kp>1000000.0</kp>
      <kd>10.0</kd>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <fdir1>1 0 0</fdir1>
      <maxVel>1.0</maxVel>
      <minDepth>0.00</minDepth>
  </gazebo>


  <!--  -->
  <gazebo reference="right_castor_wheel_link">
      <material>Gazebo/Black</material>
      <!--tags are from: http://gazebosim.org/tutorials/?tut=ros_urdf-->
      <!--These values fixed the robot from bouncing side to side:
          Problem: http://answers.gazebosim.org/question/24459/model-contact-with-ground-issue/
          solution: see: http://answers.gazebosim.org/question/3334/slip1-slip2-in-urdf/-->
      <kp>1000000.0</kp>
      <kd>10.0</kd>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <fdir1>1 0 0</fdir1>
      <maxVel>1.0</maxVel>
      <minDepth>0.00</minDepth>
  </gazebo>

  
<!--=========================================PLUG-INS======================================-->

  <!--This plugin allows us to run a diff_drive controller in Gazebo -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>base_to_left_drive_wheel_joint</leftJoint>
      <rightJoint>base_to_right_drive_wheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.36</wheelDiameter>
      <torque>20</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>



  <!-- This is a camera plug-in for gazebo. This allows us to see the what is
  going on in the simulation using a camera-->
  <gazebo reference="camera_link">
    <material>Gazebo/Green</material>
    <sensor type="camera" name="camera_1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/jimmy/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- lidar plugin. This allows us to get lidar data from teh world in Gazebo -->
  <gazebo reference="laser"> <!--THis is the link name-->
    <sensor type="gpu_ray" name="jimmy_lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>760</samples>
            <resolution>1</resolution>
            <min_angle>-1.57</min_angle>
            <max_angle>1.57</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_lidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/jimmy/laser/scan</topicName> <!--topic for laser output-->
        <frameName>jimmylidar</frameName> <!--state the topic for transforms for tf-->
      </plugin>
    </sensor>
  </gazebo> 



</robot>
